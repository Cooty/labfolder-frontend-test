{"version":3,"sources":["src/app.js","src/configuration.js","src/environment.js","src/main.js","src/people-form.js","src/people-table.js","src/person.js","src/sidebar.js","src/traits-navigation.js","src/resources/index.js","resources/styles/app.scss"],"names":["App","message","Configuration","traits","name","displayName","people","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","PeopleForm","config","checkedTraits","label","placeholder","personName","add","length","push","PeopleTable","sortByName","direction","sortByTrait","trait","deletePerson","index","showDeleteConfirm","cancelDelete","Person","Sidebar","empty","single","plural","TraitsNavigation"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\r\n  constructor() {\r\n    this.message = 'Hello World!';\r\n    // TODO: Implement routing here\r\n    // something like this, the bas rout should be the table with all the people sorted\r\n    // the other route should be another view-modell where we pass an array that's already filtered for a specific trait\r\n    // configureRouter(config, router) {\r\n    //     config.title = 'Contacts';\r\n    //     config.map([\r\n    //       { route: '',              moduleId: 'no-selection',   title: 'Select'},\r\n    //       { route: 'contacts/:id',  moduleId: 'contact-detail', name: 'contacts' }\r\n    //     ]);\r\n\r\n    //     this.router = router;\r\n    //   }\r\n  }\r\n}\r\n","export class Configuration {\r\n  constructor() {\r\n    this.traits = [\r\n      {name: 'super-power', displayName: 'Super Power'},\r\n      {name: 'rich', displayName: 'Rich'},\r\n      {name: 'genius', displayName: 'Genius'}\r\n    ];\r\n    this.people = [];\r\n  }\r\n}\r\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {inject} from 'aurelia-framework';\r\nimport {Configuration} from './configuration';\r\nimport {Person} from './person';\r\n\r\n@inject(Configuration)\r\nexport class PeopleForm {\r\n  constructor(config) {\r\n    this.traits = config.traits;\r\n    this.checkedTraits = [];\r\n    this.people = config.people;\r\n    this.label = 'Add a new person!';\r\n    this.placeholder = 'ex.: Jane Doe';\r\n    this.personName = '';\r\n  }\r\n\r\n  add() {\r\n    if (this.personName.length) {\r\n      // TODO: Figure out a better structure for passing traits, so I can traverse them by traits they have\r\n      // the chekedTraits only has values, so no way to map it against config.traits\r\n      // Ideal result should look like this, where I can explicitly tell who has what trait\r\n    //   let traits = [\r\n    //         {name: 'super-power', displayName: 'Super Power', hasIt: true},\r\n    //         {name: 'rich', displayName: 'Rich', hasIt: false},\r\n    //         {name: 'genius', displayName: 'Genius', hasIt: true}\r\n    //     ];\r\n      this.people.push(new Person(this.personName, this.checkedTraits));\r\n      this.personName = '';\r\n      this.checkedTraits = [];\r\n    }\r\n  }\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Configuration} from './configuration';\r\n\r\n@inject(Configuration)\r\nexport class PeopleTable {\r\n  constructor(config) {\r\n    this.traits = config.traits;\r\n    this.people = config.people;\r\n  }\r\n\r\n  sortByName(name, direction) {\r\n    // TODO: Implement sorting the this.people by the name property on the Person object\r\n  }\r\n\r\n  sortByTrait(trait, direction) {\r\n    // TODO: Implement a generic sorter for any Boolean property\r\n  }\r\n\r\n  deletePerson(index) {\r\n    // TODO: Find the person object with the given index (paased from the view) and remove it from the this.people array\r\n  }\r\n\r\n  showDeleteConfirm(index) {\r\n    // TODO: Implemenet the displaying for the confirm bubble that hold the actual delete button on the UI for each row\r\n  }\r\n\r\n  cancelDelete() {\r\n    // TODO: Hide the currently opened delete confirm panel\r\n  }\r\n}\r\n","export class Person {\r\n  constructor(name, traits) {\r\n    this.name = name;\r\n    this.traits = traits;\r\n  }\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Configuration} from './configuration';\r\n\r\n@inject(Configuration)\r\nexport class Sidebar {\r\n  constructor(config) {\r\n    this.people = config.people;\r\n    this.empty = 'Noone added yet';\r\n    this.single = 'Person';\r\n    this.plural = 'People';\r\n  }\r\n\r\n  // TODO: Figure out a way how o loop thorugh the people and disect them by the traits they have\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {Configuration} from './configuration';\r\n\r\n@inject(Configuration)\r\nexport class TraitsNavigation {\r\n  constructor(config) {\r\n    this.traits = config.traits;\r\n    this.people = config.people;\r\n  }\r\n}\r\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","$form-h: 60px;\r\n$bg-color: #eee;\r\n\r\nhtml {\r\n    background-color: $bg-color;\r\n}\r\n\r\nbody {\r\n    height: 100%;\r\n    background: $bg-color;\r\n}\r\n\r\n.wrapper {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n}\r\n\r\n.people-form {\r\n    width: 100%;\r\n    height: $form-h;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 1000;\r\n    background: #fff;\r\n    box-shadow: 0 0 4px rgba(0, 0, 0, .2);\r\n\r\n    &-offset {\r\n        padding-top: $form-h + 30px;\r\n    }\r\n\r\n}"],"sourceRoot":".."}